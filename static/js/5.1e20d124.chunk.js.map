{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","order","props","ingredients","ingredinetName","push","name","amount","ingredientOutput","map","ig","style","textTransform","display","margin","border","padding","className","classes","Order","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,MAAQ,uB,gHC+BXC,EA7BD,SAACC,GAEX,IAAMC,EAAc,GACpB,IAAI,IAAIC,KAAkBF,EAAMC,YAC5BA,EAAYE,KACR,CACIC,KAAOF,EACPG,OAASL,EAAMC,YAAYC,KAIvC,IAAMI,EAAmBL,EAAYM,KAAI,SAAAC,GACrC,OAAQ,uBACAC,MAAO,CACHC,cAAgB,aAChBC,QAAU,eACVC,OAAS,QACTC,OAAS,iBACTC,QAAU,OANd,UAQeN,EAAGJ,KARlB,KAQ0BI,EAAGH,OAR7B,MAQKG,EAAGJ,SAEpB,OACI,sBAAKW,UAAWC,IAAQC,MAAxB,UACI,+CAAkBX,KAClB,yCAAW,0CAAaY,OAAOC,WAAWnB,EAAMoB,OAAOC,QAAQ,a,gCCpBrEC,E,uKAGF,WACIC,KAAKvB,MAAMwB,cAAcD,KAAKvB,MAAMyB,MAAMF,KAAKvB,MAAM0B,U,oBAGzD,WACI,IAAIC,EAAS,cAACC,EAAA,EAAD,IAUb,OATIL,KAAKvB,MAAM6B,UACXF,EAASJ,KAAKvB,MAAM2B,OAAOpB,KAAI,SAAAR,GAAK,OAChC,cAACkB,EAAD,CAEIhB,YAAeF,EAAME,YACrBmB,MAASrB,EAAMqB,OAFRrB,EAAM+B,QAOrB,8BACKH,Q,GApBII,aAwCNC,uBAfS,SAAAC,GACpB,MAAM,CACFN,OAASM,EAAMlC,MAAM4B,OACrBE,QAAUI,EAAMlC,MAAM8B,QACtBJ,MAAQQ,EAAMC,KAAKT,MACnBC,OAASO,EAAMC,KAAKR,WAID,SAAAS,GACvB,MAAO,CACHX,cAAgB,SAACC,EAAOC,GAAR,OAAmBS,EAASC,IAAoBX,EAAOC,QAIhEM,CAA4CK,YAAiBf,EAAOgB","file":"static/js/5.1e20d124.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","import React from 'react';\nimport classes from './Order.module.css';\n\nconst order = (props) => {\n    \n    const ingredients = [];\n    for(let ingredinetName in props.ingredients){\n        ingredients.push(\n            {\n                name : ingredinetName,\n                amount : props.ingredients[ingredinetName]\n            }\n        );\n    }\n    const ingredientOutput = ingredients.map(ig => {\n        return (<span \n                style={{\n                    textTransform : 'capitalize',\n                    display : 'inline-block',\n                    margin : '0 8px',\n                    border : '1px solid #ccc',\n                    padding : '5px' \n                }}\n                key={ig.name}>{ig.name} ({ig.amount})</span>)\n    })\n    return(\n        <div className={classes.Order}>\n            <p>Ingredients : {ingredientOutput}</p>\n            <p>Price : <strong>INR {Number.parseFloat(props.price).toFixed(2)}</strong></p>\n        </div>\n    );\n}\nexport default order;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass Orders extends Component{\n\n\n    componentDidMount(){\n        this.props.onFetchOrders(this.props.token,this.props.userId);\n    }\n\n    render(){\n        let orders = <Spinner/>\n        if(!this.props.loading ){\n            orders = this.props.orders.map(order => (\n                <Order\n                    key = {order.id}\n                    ingredients = {order.ingredients}\n                    price = {order.price}\n                />\n            ))\n        }\n        return (\n            <div>\n                {orders}\n            </div>\n        );\n    }\n}\nconst mapStateToProps = state => {\n    return{\n        orders : state.order.orders,\n        loading : state.order.loading,\n        token : state.auth.token,\n        userId : state.auth.userId\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders : (token, userId) => dispatch(actions.fetchOrders(token, userId))\n    };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(Orders,axios));"],"sourceRoot":""}